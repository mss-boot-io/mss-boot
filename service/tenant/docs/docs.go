// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tenant/api/v1/tenant": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "列表tenant",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tenant"
                ],
                "summary": "列表tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "租户名称",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "当前页",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "每页容量",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/form.TenantListItem"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "创建tenant",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tenant"
                ],
                "summary": "创建tenant",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.TenantCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/tenant/api/v1/tenant/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取tenant",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tenant"
                ],
                "summary": "获取tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/form.TenantGetResp"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新tenant",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tenant"
                ],
                "summary": "更新tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.TenantUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "删除tenant",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tenant"
                ],
                "summary": "删除tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "form.TenantCreateReq": {
            "type": "object",
            "required": [
                "expiredAt",
                "name"
            ],
            "properties": {
                "contact": {
                    "description": "联系方式",
                    "type": "string"
                },
                "description": {
                    "description": "描述",
                    "type": "string"
                },
                "domains": {
                    "description": "域名",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "expiredAt": {
                    "description": "有效期",
                    "type": "string"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                },
                "status": {
                    "description": "状态",
                    "type": "integer"
                },
                "system": {
                    "description": "系统管理",
                    "type": "boolean"
                }
            }
        },
        "form.TenantGetResp": {
            "type": "object",
            "required": [
                "expiredAt"
            ],
            "properties": {
                "contact": {
                    "description": "联系方式",
                    "type": "string"
                },
                "createdAt": {
                    "description": "创建时间",
                    "type": "string"
                },
                "description": {
                    "description": "描述",
                    "type": "string"
                },
                "domains": {
                    "description": "域名",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expiredAt": {
                    "description": "有效期",
                    "type": "string"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                },
                "status": {
                    "description": "状态",
                    "type": "integer"
                },
                "system": {
                    "description": "系统管理",
                    "type": "boolean"
                },
                "updatedAt": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "form.TenantListItem": {
            "type": "object",
            "required": [
                "expiredAt"
            ],
            "properties": {
                "contact": {
                    "description": "联系方式",
                    "type": "string"
                },
                "createdAt": {
                    "description": "创建时间",
                    "type": "string"
                },
                "description": {
                    "description": "描述",
                    "type": "string"
                },
                "domains": {
                    "description": "域名",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expiredAt": {
                    "description": "有效期",
                    "type": "string"
                },
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                },
                "status": {
                    "description": "状态",
                    "type": "integer"
                },
                "system": {
                    "description": "系统管理",
                    "type": "boolean"
                },
                "updatedAt": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "form.TenantUpdateReq": {
            "type": "object",
            "required": [
                "expiredAt"
            ],
            "properties": {
                "contact": {
                    "description": "联系方式",
                    "type": "string"
                },
                "description": {
                    "description": "描述",
                    "type": "string"
                },
                "domains": {
                    "description": "域名",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "expiredAt": {
                    "description": "有效期",
                    "type": "string"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                }
            }
        },
        "response.Page": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "requestId": {
                    "description": "数据集",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.1",
	Host:        "localhost:9094",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "tenant API",
	Description: "tenant接口文档",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
